/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Alfy API
 * The Alfy API documentation
 * OpenAPI spec version: 1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  BaseResponseDto,
  ChangeFamilyAdminDto,
  CreateFamilyDto,
  CreateUserDto,
  UpdateFamilyDto,
  UpdateUserStatusDto,
} from '../alfyAPI.schemas';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class SysadminDashboardService {
  constructor(private http: HttpClient) {}
  /**
   * @summary Create a new family (sysadmin only)
   */
  sysadminControllerCreateFamily<TData = BaseResponseDto>(
    createFamilyDto: CreateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerCreateFamily<TData = BaseResponseDto>(
    createFamilyDto: CreateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerCreateFamily<TData = BaseResponseDto>(
    createFamilyDto: CreateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerCreateFamily<TData = BaseResponseDto>(
    createFamilyDto: CreateFamilyDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.post<TData>(
      `/api/sysadmin/families`,
      createFamilyDto,
      options
    );
  }
  /**
   * @summary Get all families (sysadmin only)
   */
  sysadminControllerGetAllFamilies<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerGetAllFamilies<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerGetAllFamilies<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerGetAllFamilies<TData = BaseResponseDto>(
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/sysadmin/families`, options);
  }
  /**
   * @summary Get family with members (sysadmin only)
   */
  sysadminControllerGetFamilyWithMembers<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerGetFamilyWithMembers<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerGetFamilyWithMembers<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerGetFamilyWithMembers<TData = BaseResponseDto>(
    id: string,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/sysadmin/families/${id}`, options);
  }
  /**
   * @summary Update family (sysadmin only)
   */
  sysadminControllerUpdateFamily<TData = BaseResponseDto>(
    id: string,
    updateFamilyDto: UpdateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerUpdateFamily<TData = BaseResponseDto>(
    id: string,
    updateFamilyDto: UpdateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerUpdateFamily<TData = BaseResponseDto>(
    id: string,
    updateFamilyDto: UpdateFamilyDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerUpdateFamily<TData = BaseResponseDto>(
    id: string,
    updateFamilyDto: UpdateFamilyDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.put<TData>(
      `/api/sysadmin/families/${id}`,
      updateFamilyDto,
      options
    );
  }
  /**
   * @summary Change family admin (sysadmin only)
   */
  sysadminControllerChangeFamilyAdmin<TData = BaseResponseDto>(
    id: string,
    changeFamilyAdminDto: ChangeFamilyAdminDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerChangeFamilyAdmin<TData = BaseResponseDto>(
    id: string,
    changeFamilyAdminDto: ChangeFamilyAdminDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerChangeFamilyAdmin<TData = BaseResponseDto>(
    id: string,
    changeFamilyAdminDto: ChangeFamilyAdminDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerChangeFamilyAdmin<TData = BaseResponseDto>(
    id: string,
    changeFamilyAdminDto: ChangeFamilyAdminDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.put<TData>(
      `/api/sysadmin/families/${id}/admin`,
      changeFamilyAdminDto,
      options
    );
  }
  /**
   * @summary Create a new user (sysadmin only)
   */
  sysadminControllerCreateUser<TData = BaseResponseDto>(
    createUserDto: CreateUserDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerCreateUser<TData = BaseResponseDto>(
    createUserDto: CreateUserDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerCreateUser<TData = BaseResponseDto>(
    createUserDto: CreateUserDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerCreateUser<TData = BaseResponseDto>(
    createUserDto: CreateUserDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.post<TData>(`/api/sysadmin/users`, createUserDto, options);
  }
  /**
   * @summary Get all users (sysadmin only)
   */
  sysadminControllerGetAllUsers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerGetAllUsers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerGetAllUsers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerGetAllUsers<TData = BaseResponseDto>(
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/sysadmin/users`, options);
  }
  /**
   * @summary Update user status (sysadmin only)
   */
  sysadminControllerUpdateUserStatus<TData = BaseResponseDto>(
    id: string,
    updateUserStatusDto: UpdateUserStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerUpdateUserStatus<TData = BaseResponseDto>(
    id: string,
    updateUserStatusDto: UpdateUserStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerUpdateUserStatus<TData = BaseResponseDto>(
    id: string,
    updateUserStatusDto: UpdateUserStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerUpdateUserStatus<TData = BaseResponseDto>(
    id: string,
    updateUserStatusDto: UpdateUserStatusDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.put<TData>(
      `/api/sysadmin/users/${id}/status`,
      updateUserStatusDto,
      options
    );
  }
  /**
   * @summary Delete user permanently (sysadmin only)
   */
  sysadminControllerDeleteUser<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  sysadminControllerDeleteUser<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  sysadminControllerDeleteUser<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  sysadminControllerDeleteUser<TData = BaseResponseDto>(
    id: string,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.delete<TData>(`/api/sysadmin/users/${id}`, options);
  }
}

export type SysadminControllerCreateFamilyClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerGetAllFamiliesClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerGetFamilyWithMembersClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerUpdateFamilyClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerChangeFamilyAdminClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerCreateUserClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerGetAllUsersClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerUpdateUserStatusClientResult =
  NonNullable<BaseResponseDto>;
export type SysadminControllerDeleteUserClientResult =
  NonNullable<BaseResponseDto>;
