/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Alfy API
 * The Alfy API documentation
 * OpenAPI spec version: 1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  BaseResponseDto,
  CreateFamilyMemberDto,
  UpdateFamilyMemberStatusDto,
} from '../alfyAPI.schemas';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class AdminDashboardService {
  constructor(private http: HttpClient) {}
  /**
   * Admin can create new family members in their own family with USER role only.
   * @summary Create a new family member (admin only)
   */
  adminControllerCreateFamilyMember<TData = BaseResponseDto>(
    createFamilyMemberDto: CreateFamilyMemberDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  adminControllerCreateFamilyMember<TData = BaseResponseDto>(
    createFamilyMemberDto: CreateFamilyMemberDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  adminControllerCreateFamilyMember<TData = BaseResponseDto>(
    createFamilyMemberDto: CreateFamilyMemberDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  adminControllerCreateFamilyMember<TData = BaseResponseDto>(
    createFamilyMemberDto: CreateFamilyMemberDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.post<TData>(
      `/api/admin/family-members`,
      createFamilyMemberDto,
      options
    );
  }
  /**
   * Admin can view all members of their own family.
   * @summary Get all family members (admin only)
   */
  adminControllerGetFamilyMembers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  adminControllerGetFamilyMembers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  adminControllerGetFamilyMembers<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  adminControllerGetFamilyMembers<TData = BaseResponseDto>(
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/admin/family-members`, options);
  }
  /**
   * Admin can view details of a specific family member.
   * @summary Get family member details (admin only)
   */
  adminControllerGetFamilyMemberById<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  adminControllerGetFamilyMemberById<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  adminControllerGetFamilyMemberById<TData = BaseResponseDto>(
    id: string,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  adminControllerGetFamilyMemberById<TData = BaseResponseDto>(
    id: string,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/admin/family-members/${id}`, options);
  }
  /**
   * Admin can activate/deactivate family members. Cannot deactivate themselves or other admins.
   * @summary Update family member status (admin only)
   */
  adminControllerUpdateFamilyMemberStatus<TData = BaseResponseDto>(
    id: string,
    updateFamilyMemberStatusDto: UpdateFamilyMemberStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  adminControllerUpdateFamilyMemberStatus<TData = BaseResponseDto>(
    id: string,
    updateFamilyMemberStatusDto: UpdateFamilyMemberStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  adminControllerUpdateFamilyMemberStatus<TData = BaseResponseDto>(
    id: string,
    updateFamilyMemberStatusDto: UpdateFamilyMemberStatusDto,
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  adminControllerUpdateFamilyMemberStatus<TData = BaseResponseDto>(
    id: string,
    updateFamilyMemberStatusDto: UpdateFamilyMemberStatusDto,
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.put<TData>(
      `/api/admin/family-members/${id}/status`,
      updateFamilyMemberStatusDto,
      options
    );
  }
  /**
   * Admin can view statistics about their family members.
   * @summary Get family statistics (admin only)
   */
  adminControllerGetFamilyStats<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  adminControllerGetFamilyStats<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  adminControllerGetFamilyStats<TData = BaseResponseDto>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  adminControllerGetFamilyStats<TData = BaseResponseDto>(
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api/admin/family-stats`, options);
  }
}

export type AdminControllerCreateFamilyMemberClientResult =
  NonNullable<BaseResponseDto>;
export type AdminControllerGetFamilyMembersClientResult =
  NonNullable<BaseResponseDto>;
export type AdminControllerGetFamilyMemberByIdClientResult =
  NonNullable<BaseResponseDto>;
export type AdminControllerUpdateFamilyMemberStatusClientResult =
  NonNullable<BaseResponseDto>;
export type AdminControllerGetFamilyStatsClientResult =
  NonNullable<BaseResponseDto>;
