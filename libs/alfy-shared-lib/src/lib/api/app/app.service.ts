/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Alfy API
 * The Alfy API documentation
 * OpenAPI spec version: 1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable } from '@angular/core';

import { Observable } from 'rxjs';

type HttpClientOptions = {
  headers?:
    | HttpHeaders
    | {
        [header: string]: string | string[];
      };
  context?: HttpContext;
  observe?: any;
  params?:
    | HttpParams
    | {
        [param: string]:
          | string
          | number
          | boolean
          | ReadonlyArray<string | number | boolean>;
      };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};

@Injectable({ providedIn: 'root' })
export class AppService {
  constructor(private http: HttpClient) {}
  appControllerGetData<TData = void>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
  appControllerGetData<TData = void>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
  appControllerGetData<TData = void>(
    options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;
  appControllerGetData<TData = void>(
    options?: HttpClientOptions
  ): Observable<TData> {
    return this.http.get<TData>(`/api`, options);
  }
}

export type AppControllerGetDataClientResult = NonNullable<void>;
